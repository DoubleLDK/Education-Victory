# Generated by Django 4.1.4 on 2023-02-13 08:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='category of solution', max_length=30)),
                ('weight', models.IntegerField(default=1, help_text='weight of the category')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Keypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name of the keypoint', max_length=50)),
                ('difficulty', models.IntegerField(default=1, help_text='difficulty of a keypoint')),
                ('requirements', models.CharField(blank=True, help_text='requirements of keypoint', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='question.category')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='question name', max_length=100)),
                ('description', models.JSONField(help_text='description of question')),
                ('category', models.JSONField(help_text='list of category id based on solution')),
                ('type', models.CharField(choices=[('MC', 'Multiple Choice'), ('SA', 'Short Answer'), ('TF', 'True / False')], help_text='type of question', max_length=2)),
                ('upvote', models.IntegerField(default=1, help_text='upvote of the question')),
                ('downvote', models.IntegerField(default=1, help_text='downvote of the question')),
                ('publish', models.BooleanField(default=1, help_text='publish the question or not')),
                ('URL', models.URLField(blank=True, help_text='URL of question', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='solution name', max_length=100)),
                ('answer', models.JSONField(help_text='detailed solution')),
                ('keypoints', models.JSONField(help_text='list of keypoints id')),
                ('resources', models.JSONField(help_text='resources of question')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.category')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.question')),
            ],
        ),
        migrations.CreateModel(
            name='UserSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keypoint', models.JSONField(blank=True, help_text='list of completed keypoint id')),
                ('content', models.JSONField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.solution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserKeypointScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('keypoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.keypoint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
