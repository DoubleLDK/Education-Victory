# Generated by Django 4.1.4 on 2024-02-27 03:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import question.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('problem', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(max_length=4000)),
                ('type', models.IntegerField(choices=[(0, 'Single'), (1, 'Multiple')], default=0)),
                ('difficulty', models.IntegerField(default=0)),
                ('choice', models.JSONField(default=question.models.get_default_json)),
                ('answer', models.IntegerField(default=1, help_text='binary form of the correct answer')),
                ('text_hint', models.JSONField(default=question.models.get_default_json)),
                ('text_hint_2', models.JSONField(default=question.models.get_default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checklist', models.ManyToManyField(to='question.checklist')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.problem')),
            ],
        ),
        migrations.CreateModel(
            name='CodingQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(max_length=4000)),
                ('default_code', models.TextField(max_length=4000)),
                ('difficulty', models.IntegerField(default=0)),
                ('answer', models.CharField(blank=True, max_length=8000)),
                ('text_hint', models.JSONField(default=question.models.get_default_json)),
                ('text_hint_2', models.JSONField(default=question.models.get_default_json)),
                ('code_hint', models.JSONField(default=question.models.get_default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checklist', models.ManyToManyField(to='question.checklist')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.problem')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='greedy', max_length=100)),
                ('weight', models.IntegerField(default=1, help_text='bigger means more important')),
                ('difficulty', models.IntegerField(default=1, help_text='bigger means more difficult')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('checklist', models.IntegerField(default=1, help_text='binary form of checked checklist')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_input', models.JSONField(default=question.models.get_default_json)),
                ('case_output', models.JSONField(default=question.models.get_default_json)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coding_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.codingquestion')),
            ],
        ),
        migrations.CreateModel(
            name='TagCoding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('coding_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.codingquestion')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.tag')),
            ],
            options={
                'unique_together': {('tag', 'coding_question')},
            },
        ),
        migrations.CreateModel(
            name='TagChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('choice_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.choicequestion')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.tag')),
            ],
            options={
                'unique_together': {('tag', 'choice_question')},
            },
        ),
        migrations.AddField(
            model_name='codingquestion',
            name='tag',
            field=models.ManyToManyField(through='question.TagCoding', to='question.tag'),
        ),
        migrations.AddField(
            model_name='choicequestion',
            name='tag',
            field=models.ManyToManyField(through='question.TagChoice', to='question.tag'),
        ),
    ]
